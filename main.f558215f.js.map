{"version":3,"sources":["scripts/main.js"],"names":["listUl","document","querySelector","listLi","querySelectorAll","sortList","list","toNumber","el","dataset","salary","slice","split","join","sort","a","b","append","getEmployees","map","name","innerText"],"mappings":";AAAA,aAqBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnBA,IAAMA,EAASC,SAASC,cAAc,MAChCC,EAAaF,EAAAA,SAASG,iBAAiB,OAE7C,SAASC,EAASC,GACVC,IAAAA,EAAW,SAAAC,GAAM,OAACA,EAAGC,QAAQC,OAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAEnEP,EAAKQ,KAAK,SAACC,EAAGC,GAAMT,OAAAA,EAASS,GAAKT,EAASQ,KAE3Cf,EAAOiB,OAAPjB,MAAAA,EAAiBM,EAAAA,IAGnB,SAASY,EAAaZ,GACbA,OAAAA,EAAKa,IAAI,SAAAX,GAAE,OAAA,EAAA,CAChBY,KAAMZ,EAAGa,WACNb,EAAGC,WAIVJ,EAASF,GACTe,EAAaf","file":"main.f558215f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst listUl = document.querySelector('ul');\nconst listLi = [...document.querySelectorAll('li')];\n\nfunction sortList(list) {\n  const toNumber = el => +el.dataset.salary.slice(1).split(',').join('');\n\n  list.sort((a, b) => toNumber(b) - toNumber(a));\n\n  listUl.append(...list);\n}\n\nfunction getEmployees(list) {\n  return list.map(el => ({\n    name: el.innerText,\n    ...el.dataset,\n  }));\n}\n\nsortList(listLi);\ngetEmployees(listLi);\n"]}